---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
		transition: all 0.3s ease;
	}
	a {
		display: inline-block;
		text-decoration: none;
		transition: all 0.3s ease;
		padding: 0.5rem 1rem;
		font-size: 1rem;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
	@media (max-width: 768px) {
		a {
			display: block;
			padding: 0.75rem 1rem;
			font-size: 1.1rem;
		}
	}
	a {
		display: inline-block;
		text-decoration: none;
		transition: all 0.3s ease;
		padding: 0.5rem 1rem;
		font-size: 1rem;
	}
	a:hover {
		transform: translateY(-2px);
		color: #007bff;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
	@media (max-width: 768px) {
		a {
			display: block;
			padding: 0.75rem 1rem;
			font-size: 1.1rem;
		}
	}
</style>
